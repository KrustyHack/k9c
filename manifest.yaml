apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: Namespace
    metadata:
      name: k9c
  - apiVersion: v1
    kind: Namespace
    metadata:
      name: workspace
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: ide
      namespace: k9c
      labels:
        name: ide
  - apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRole
    metadata:
      name: ide
      labels:
        name: ide
    rules:
      - apiGroups: [ '*' ]
        resources: [ '*' ]
        verbs: [ '*' ]
      - nonResourceURLs: [ '*' ]
        verbs: [ '*' ]
  - apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRoleBinding
    metadata:
      name: ide
      namespace: k9c
      labels:
        name: ide
    roleRef:
      kind: ClusterRole
      name: cluster-admin
      apiGroup: rbac.authorization.k8s.io
    subjects:
      - kind: ServiceAccount
        name: ide
        namespace: k9c
  - apiVersion: v1
    kind: Service
    metadata:
      name: ide
      namespace: k9c
      labels:
        name: ide
    spec:
      type: LoadBalancer
      selector:
        name: ide
      ports:
      - name: http
        port: 8080
        targetPort: 8080
  #- apiVersion: extensions/v1beta1
  #  kind: Ingress
  #  metadata:
  #    name: ide
  #    namespace: k9c
  #  spec:
  #    backend:
  #      serviceName: ide
  #      servicePort: http
  #    #rules:
  #    #  - http:
  #    #      paths:
  #    #        - path: /
  #    #          backend:
  #    #            serviceName: ide
  #    #            servicePort: http
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: workspace
      namespace: k9c
    spec:
      accessModes: [ReadWriteOnce]
      resources:
        requests:
          storage: 2Gi
  - apiVersion: apps/v1beta1
    kind: Deployment
    metadata:
      name: ide
      namespace: k9c
      labels:
        name: ide
    spec:
      template:
        metadata:
          labels:
            name: ide
        spec:
          serviceAccount: ide
          restartPolicy: Always
          terminationGracePeriodSeconds: 10
          initContainers:
            - name: git-clone
              image: errordeveloper/k9c@sha256:ad69086ac28b91c745ecd8be2d21e1f1630d81c9eeb6967338c9f73794780475
              command: [ '/bin/sh', '-c', 'test -d /workspace/app || git clone https://github.com/bricef/metrics-demo' ]
              volumeMounts:
                - name: workspace
                  mountPath: /workspace
          containers:
            - name: ide
              image: errordeveloper/k9c@sha256:ad69086ac28b91c745ecd8be2d21e1f1630d81c9eeb6967338c9f73794780475
              imagePullPolicy: IfNotPresent
              ports:
                - name: http
                  containerPort: 8080
              livenessProbe:
                httpGet:
                  port: http
                  path: /ide.html
                  httpHeaders:
                    - name: Authorization
                      value: 'Basic dXNlcm5hbWU6cGFzc3dvcmQ='
                initialDelaySeconds: 30
                periodSeconds: 5
              readinessProbe:
                httpGet:
                  port: http
                  path: /ide.html
                  httpHeaders:
                    - name: Authorization
                      value: 'Basic dXNlcm5hbWU6cGFzc3dvcmQ='
                initialDelaySeconds: 5
                periodSeconds: 1
              volumeMounts:
                - name: workspace
                  mountPath: /workspace
                - name: dockersocket
                  mountPath: /var/run/docker.sock
          volumes:
            - name: workspace
              persistentVolumeClaim:
                claimName: workspace
            - name: dockersocket
              hostPath:
                path: /var/run/docker.sock
